// Generated by CoffeeScript 1.10.0
(function() {
  $.compile.task('uglify', {
    fetch: {
      UglifyJS: "//jpillora-usa.s3.amazonaws.com/uglify.min.js"
    },
    init: function() {
      UglifyJS.minify = function(codes, options) {
        var compress, sq, stream, toplevel;
        options = UglifyJS.defaults(options || {}, {
          warnings: false,
          mangle: {},
          compress: {}
        });
        if (typeof codes === "string") {
          codes = [codes];
        }
        toplevel = null;
        codes.forEach(function(code) {
          return toplevel = UglifyJS.parse(code, {
            filename: "?",
            toplevel: toplevel
          });
        });
        if (options.compress) {
          compress = {
            warnings: options.warnings
          };
          UglifyJS.merge(compress, options.compress);
          toplevel.figure_out_scope();
          sq = UglifyJS.Compressor(compress);
          toplevel = toplevel.transform(sq);
        }
        if (options.mangle) {
          toplevel.figure_out_scope();
          toplevel.compute_char_frequency();
          toplevel.mangle_names(options.mangle);
        }
        stream = UglifyJS.OutputStream();
        toplevel.print(stream);
        return stream.toString();
      };
      return UglifyJS.AST_Node.warn_function = function(txt) {
        if (console) {
          return console.warn(txt);
        }
      };
    },
    run: function(config, callback) {
      var e, error, out;
      try {
        out = UglifyJS.minify(config.src, config);
      } catch (error) {
        e = error;
        callback("uglify: parse error: '" + e.message + "' on line: " + e.line + " col: " + e.col);
        return;
      }
      this.set(config.dest, out, true);
      return callback();
    }
  });

}).call(this);
